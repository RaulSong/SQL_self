--***CH06.2 문자 데이터를 가공하는 문자 함수***

--대.소문자를 바꿔 주는 UPPER, LOWER, INITCAP 함수
/*UPPER(문자열) : 괄호 안 문자 데이터를 모두 대문자로 변환하여 변환
LOWER(문자열) : 괄호 안 문자 뎅터를 모두 소문자로 변환하여 반환
INITCAP(문자열) : 괄호 안 문자 데이터 중 첫 글자를 대문자로, 나머지 문자를 소문자로 변환 후 반환*/

--EX06.1 UPPER, LOWER, INITCAP 함수 사용하기
SELECT
    last_name, UPPER(last_name), LOWER(last_name), INITCAP(last_name)
FROM employees;

--EX06.4 선택한 열의 문자열 길이 구하기
SELECT
    last_name, LENGTH(last_name)        --문자열 길이를 구하는 LENGTH 함수
FROM employees;

--EX06.5 사원 이름의 길이가 5 이상인 행 출력
SELECT
    last_name, LENGTH(last_name)
FROM employees
WHERE LENGTH(last_name) >= 5;

--EX06.7 SUBSTR 함수를 사용하는 예
SELECT
    job_id, SUBSTR(job_id, 1, 2), SUBSTR(job_id, 3, 2), SUBSTR(job_id, 5)
FROM employees;

--EX06.9 INSTR 함수로 문자열 데이터에서 특정 문자열 찾기
SELECT
    INSTR('HELLO, ORACLE!', 'L') INSTR_1,       --시작 위치와 몇 번째 L인지 정해지지 않음
    INSTR('HELLO, ORACLE!', 'L', 5) INSTR_2,        --다섯 번째 글자 O부터 L을 찾음
    INSTR('HELLO, ORACLE!', 'L', 2, 2) INSTR_3      --두번째 글자 E부터 시작해서 두 번째 L을 찾음
FROM dual;

--EX06.10 INSTR  함수로 사원 이름에 문자 S가 있는 행 구하기
SELECT
    *
FROM employees
WHERE INSTR(last_name, 'S') > 0;

--EX06.11 LIKE 연산자로 사원 이름에 문자 S가 있는 행 구하기
SELECT
    *
FROM employees
WHERE last_name LIKE '%S%';

--EX06.12 REPLACE 함수로 문자열 안에 있는 특정 문자 바꾸기 (REPLACE : 특정 문자를 다른 문자로 바꾸는 함수)
SELECT
    '010-1234-5678' "변경 이전",
    REPLACE('010-1234-5678', '-', ' ') 변경1,
    REPLACE('010-1234-5678', '-') 변경2
FROM dual;

--EX06.13 두 열 사이에 콜론(:) 넣고 연결하기
SELECT
    CONCAT(employee_id, last_name),         --CONCAT : 두 문자열 데이터를 합치는 함수
    CONCAT(employee_id, CONCAT(' : ', last_name))
FROM employees
WHERE last_name = 'King';

--***CH06.3 숫자 데이터를 연산하고 수치를 조정하는 숫자 함수***

--EX06.19 ROUND 함수를 사용하여 반올림된 숫자 출력
SELECT
    ROUND(1234.5678) ROUND,
    ROUND(1234.5678, 0) ROUND_0,
    ROUND(1234.5678, 1) ROUND_1,
    ROUND(1234.5678, 2) ROUND_2,
    ROUND(1234.5678, -1) ROUND_MINUS1,
    ROUND(1234.5678, -2) ROUND_MINUS
FROM dual;

--EX06.20 TRUNC 함수를 사용하여 숫자 출력
SELECT
    TRUNC(1234.5678) TRUNC,         --TRUNC : 특정 위치에서 버리는 함수
    TRUNC(1234.5678, 0) TRUNC_0,
    TRUNC(1234.5678, 1) TRUNC_1,
    TRUNC(1234.5678, 2) TRUNC_2,
    TRUNC(1234.5678, -1) TRUNC_MINUS1,
    TRUNC(1234.5678, -2) TRUNC_MINUS2
FROM dual;

--EX06.22 MOD 함수를 사용하여 나머지 값 출력
SELECT
    MOD(15, 6),         --MOD : 숫자를 나눈 나머지 값을 구하는 함수
    MOD(10, 2),
    MOD(11, 2)
FROM dual;

--***CH06.4 날짜 데이터를 다루는 날짜 함수***

--EX06.23 SYSDATE 함수를 사용하여 날짜 출력하기
SELECT
    SYSDATE 현재,
    SYSDATE-1 어제,
    SYSDATE+1 내일
FROM dual;

--EX06.24 SYSDATE와 ADD_MONTHS 함수로 3개월 후 날짜 구하기
SELECT
    SYSDATE,
    ADD_MONTHS(SYSDATE, 3)
FROM dual;

--EX06.25 입사 10주년이 되는 사원들 데이터 출력
SELECT
    employee_id, last_name, hire_date, ADD_MONTHS(hire_date, 120) "입사 10주년"
FROM employees;

--EX06.26 입사 32년 미만인 사원 데이터 출력
SELECT
    last_name, hire_date, SYSDATE
FROM employees
WHERE ADD_MONTHS(hire_date, 384) > SYSDATE;







